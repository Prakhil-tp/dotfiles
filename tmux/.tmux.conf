 set-option -g default-shell /bin/zsh

# decrease command delay (increase vim responsiveness)
 set-option -sg escape-time 1
 
# recommended in neovim :healthcheck
#set -g default-terminal "screen-256color"
#set -g default-terminal "alacritty"
#set -g default-terminal "tmux-256color"
#set-option -sa terminal-overrides ",*256col*:RGB"
set -g default-terminal "alacritty"
set -ga terminal-overrides ",xterm-256color:Tc"

# disable mouse
#set -g mouse off

# re-number windows when one is closed
set -g renumber-windows on

# turn off naming window automatically
setw -g automatic-rename off



###################
#  Key Bindings
###################

# Remap prefix from 'C-b' to 'C-a'
unbind C-b                  # remove bind for C-b
set-option -g prefix C-a    
bind-key C-a send-prefix

# clear screen
bind l send-keys 'C-l'

# Create Panes: window splitting
 # Split vertically
 unbind %
 bind | split-window -h    # Prefix | to create vertical split
 # Split horizontally
 unbind '"'
 bind - split-window -v    # Prefix - to create horizontal split

# resize panes
bind -r H resize-pane -L 5   # 5 px bigger to the left
bind -r J resize-pane -D 5   # 5 px bigger down
bind -r K resize-pane -U 5   # 5 px bigger up
bind -r L resize-pane -R 5   # 5 px bigger right

# Quick window selection
bind -r C-h select-window -t :-   # Jump to window on the left
bind -r C-l select-window -t :+   # Jump to window on the right

# Kill window
bind q confirm kill-window

# kill session
bind X confirm-before kill-session



##################
# colors 
##################

# set statusbar color

# set -g status-style fg=white,bg=colour235
# set -g status-style fg=white,bg=default
# set -g message-style fg=colour235,bg=green
# set -g status-right '#[fg=colour233,bg=colour60] %d/%m #[fg=colour233,bg=colour103] %H:%M:%S '


set -g status-bg default
set -g status-justify 'centre'
set -g status-left-length '100'
set -g status 'on'
set -g status-right-length '100'
set -g message-style fg=colour235,bg=colour248

set -g message-command-style bg=colour238,fg=colour222
setw -g window-status-activity-style bg=colour235,fg=colour154
setw -g window-status-separator ''
set -g status-left '#[fg=colour8,bg=colour238] #S '
set -g status-right '#[fg=colour233,bg=colour240] %r | %b %d %A #[fg=colour233,bg=colour238] #H '
setw -g window-status-format '#[fg=colour233,bg=colour238] #I #[fg=colour233,bg=colour240] #W '
setw -g window-status-current-format '#[fg=colour233,bg=colour248] #I #W #F '

# highlight current window
# setw -g window-status-style fg=cyan,bg=colour235
# setw -g window-status-style fg=cyan,bg=default
# setw -g window-status-current-style fg=white,bold,bg=red


# set color for active pane
set -g pane-border-style fg=colour240,bg=black
set -g pane-active-border-style fg=green,bg=black


# pane navigation ================================================================================================================================================================

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


#==================================================================================================================================================================================

# automatic restore
set -g @continuum-restore 'on'


###########################
# Plugins
###########################
# To install plugins:
#   1) Add plugin down here
#   2) Prefix + I to install plugin
# To update plugins:
#   1) Prefix + U
# To remove plugins:
#   1) Remove line down here
#   2) Prefix + ALT + U
# If you're using iTerm2 on a Mac you may need to go to your Profiles, 
# then keys and select that the `option` key should be treated as `Esc+` 
# in order for the `Prefix + ALT + U` combination to work.

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
# Add more plugins below this line

# Make navigation between tmux and vim panes seamlessly 
# set -g @plugin 'christoomey/vim-tmux-navigator'

# Persist tmux sessions across computer restarts.
set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'

# Run Tmux Plugin Manager
run '~/.tmux/plugins/tpm/tpm'
